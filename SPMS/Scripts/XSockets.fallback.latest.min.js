"WebSocket"in window==!1&&(window.WebSocket=function(n,t){var i=this;return $(window).bind("beforeunload",function(){i.close()}),t=t||n.match(/.+?\:\/\/.+?(\/.+?)(?:#|\?|$)/).pop().replace("/",""),this.handler=n,this.client={ClientGuid:"",StorageGuid:""},this.MessageEvent=function(n){return{type:"message",data:JSON.stringify(n)}},this.payload=function(n){return{handler:i.handler,client:i.client.ClientGuid,Json:n}},this.listener=function(){return{handler:i.handler,client:i.client.ClientGuid}},this.readystate=0,this.ajax("/Fallback/Init","GET",{url:i.handler,storageGuid:window.localStorage.getItem("XSocketsClientStorageGuid"+t)},!0,function(n){var r=JSON.parse(n.data);i.client.ClientGuid=r.ClientGuid;i.client.StorageGuid=r.StorageGuid;i.readyState=1;i.onmessage(new i.MessageEvent(n));window.localStorage.setItem("XSocketsClientStorageGuid"+t,r.StorageGuid);i.listen()}),this},window.WebSocket.prototype.close=function(){this.ajax("/fallback/close","GET",{client:self.client.ClientGuid},!0,function(){})},window.WebSocket.prototype.readyState=0,window.WebSocket.prototype.send=function(n){var t=JSON.parse(n);t.event!=XSockets.Events.open&&(t.event==XSockets.Events.pubSub.unsubscribe?this.ajax("/fallback/unbind","GET",{client:this.client.ClientGuid,event:JSON.parse(t.data).Event},!0,function(){}):t.event==XSockets.Events.pubSub.subscribe?this.ajax("/fallback/bind","GET",{client:this.client.ClientGuid,event:JSON.parse(t.data).Event},!1,function(){}):this.ajax("/fallback/trigger","POST",this.payload(n),!1,function(){}))},window.WebSocket.prototype.close=function(){$.getJSON("/Fallback/Close",{client:this.client.ClientGuid}).done(function(){window.sessionStorage.clear()})},window.WebSocket.prototype.ajax=function(n,t,i,r,u){var f={processData:!0,dataType:"json",type:t,url:n,async:r,cache:!1,success:u,data:i};$.ajax(f)},window.WebSocket.prototype.onmessage=function(){},window.WebSocket.prototype.onerror=function(){},window.WebSocket.prototype.listen=function(){var n=this;this.ajax("/fallback/listen","POST",this.listener(),!0,function(t){$.each(t,function(t,i){n.onmessage(n.MessageEvent(i))});n.listen()})});
/*
//# sourceMappingURL=XSockets.fallback.latest.min.js.map
*/